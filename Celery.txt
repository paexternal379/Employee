### What is Django Celery?

Celery is an asynchronous task queue/job queue used to execute tasks in the background. When integrated with **Django**, it allows you to:

- Run time-consuming operations outside the main request-response cycle.
- Schedule periodic tasks (like cron jobs).
- Handle distributed workloads using message brokers.


### How Django Works with Celery

1. Django defines the task (e.g., sending an email, generating a report).
2. Celery processes the task in the background using a **worker**.
3. A message broker (like RabbitMQ or Redis) sends the task from Django to Celery.

### Key Components

 - Tasks: Python functions decorated with `@shared_task` or `@app.task`.
 - Worker: A background process that listens for tasks and executes them.
 - Broker: ddleware (usually Redis) that queues tasks between Django and Celery.
 - Beat (optional): A scheduler for running periodic tasks.
